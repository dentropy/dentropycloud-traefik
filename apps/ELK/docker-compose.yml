version: '3.2'

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    expose:
      - "9200"
      - "9300"
    #ports:
    #  - "9200:9200"
    #  - "9300:9300"
    restart: always
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk
      - traefik-homelab
    labels:
        - "traefik.enable=true"
        - 'traefik.http.routers.elasticsearch.entrypoints=https'
        - "traefik.http.routers.elasticsearch.rule=Host(`elasticsearch.${MY_DOMAIN}`)"
        - "traefik.http.routers.elasticsearch.tls.certresolver=myresolver"
        - "traefik.http.routers.elasticsearch.service=elasticsearch@docker"
        - "traefik.http.services.elasticsearch.loadbalancer.server.port=9200"
        - "traefik.http.routers.elasticsearch.tls.options=default"
        - "traefik.docker.network=traefik-homelab"

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    #ports:
    #  - "5044:5044"
    #  - "5000:5000/tcp"
    #  - "5000:5000/udp"
    #  - "9600:9600"
    expose:
      - "5044"
      - "5000/tcp"
      - "5000/udp"
      - "9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    restart: always
    networks:
      - elk
      - traefik-homelab
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    expose:
      - "5601"
    #ports:
    #  - "5601:5601"
    networks:
      - elk
      - traefik-homelab
    restart: always
    depends_on:
      - elasticsearch
    labels:
        - "traefik.enable=true"
        - 'traefik.http.routers.kibana.entrypoints=https'
        - "traefik.http.routers.kibana.rule=Host(`kibana.${MY_DOMAIN}`)"
        - "traefik.http.routers.kibana.tls.certresolver=myresolver"
        - "traefik.http.routers.kibana.service=kibana@docker"
        - "traefik.http.services.kibana.loadbalancer.server.port=5601"
        - "traefik.http.routers.kibana.tls.options=default"
        - "traefik.docker.network=traefik-homelab"

networks:
  elk:
    driver: bridge
  traefik-homelab:
    external:
      name: traefik-homelab

volumes:
    elasticsearch:
        external: true
